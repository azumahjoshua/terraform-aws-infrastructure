pipeline {
    agent any
    tools {
        jdk 'jdk17'
        nodejs 'Nodejs'
    }
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }
    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git branch: 'main', url: 'https://github.com/azumahjoshua/terraform-aws-infrastructure.git'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh '''
                    $SCANNER_HOME/bin/sonar-scanner \
                    -Dsonar.projectName=keeptrack \
                    -Dsonar.projectKey=keeptrack
                    '''
                }
            }
        }
        stage('Quality Gate') {
            steps {
                script {
                    timeout(time: 10, unit: 'MINUTES') {
                        waitForQualityGate abortPipeline: true, credentialsId: 'jenkins'
                    }
                }
            }
        }
        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }
        stage('OWASP FS Scan') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        stage('Trivy FS Scan') {
            steps {
                sh 'trivy fs . > trivyfs.txt'
            }
        }
        stage('Docker Build') {
            steps {
                script {
                    sh 'docker build -t keeptrack-app .'
                }
            }
        }
        stage('Trivy Image Scan') {
            steps {
                sh 'trivy image keeptrack-app:latest > trivyimage.txt'
            }
        }
        stage('Deploy to Container') {
            steps {
                sh 'docker run -d --name keeptrack-app -p 3000:3000 -p 4000:4000 keeptrack-app:latest'
                script {
                    sh 'docker logs --tail 50 keeptrack-app'
                }
            }
        }
    }
}


